) %>%
pivot_longer(
cols = starts_with("gas"),
names_to = "Year",
names_prefix = "gas",
values_to = "Gas"
) %>%
mutate(
Year = as.numeric(Year)
)
oil_data %>%
ggplot(
aes(
x = Year, y = Oil, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Oil Production 2000-2011") +
ylab("Oil (barrels)")
gas_data %>%
ggplot(
aes(
x = Year, y = Gas, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Gas Production 2000-2011") +
ylab("Gas (1000 cubic ft)")
oil_data %>%
ggplot(
aes(
x = Year, y = Oil, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Oil Production 2000-2011") +
ylab("Oil (barrels)")
gas_data %>%
ggplot(
aes(
x = Year, y = Gas, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Gas Production 2000-2011") +
ylab("Gas (1000 cubic ft)")
library(tidyverse)
library(DBI)
library(duckdb)
library(duckplyr)
con <- dbConnect(duckdb(), dbdir = ":memory:")
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
con <- dbConnect(duckdb(), dbdir = ":memory:")
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
df1 <- df1 %>%
collect() # query is executed and data enters R memory
library(DBI)
library(RMariaDB)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306,
ssl.verify = F
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3307,
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "127.0.0.1",
port = 3307,
)
tables <- dbListTables(con)
str(tables)
tls201 <- dbGetQuery(
con,
"SELECT * FROM tls201_appln LIMIT 500"
)
View(tls201)
# always run when done connecting
dbDisconnect(con)
?dbConnect
?collect
library(tidyverse)
setwd("~/Desktop/PSTAT 197/Projects/capstone-project2035")
library(tidyverse)
library(scales)
microdata <- read.csv("Data/clean_microdata.csv")
microdata_counts <- microdata %>%
group_by(
county, occupation, occ_type, year, wagp, agep
) %>%
summarize(
workers = sum(pwgtp)
)
## create age group
microdata_counts <- microdata_counts %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
)
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
) %>%
group_by(
county, occupation, occ_type, year, pwgtp, age_group
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
View(weighted_wage)
unique(weighted_wage$occupation)
## by specific occupation
weighted_wage <- weighted_wage %>%
mutate(occ_group = case_when(
occupation %in% c(
"Architectural And Engineering Managers", "Civil Engineers", "Electrical And Electronics Engineers", "Engineering Managers", "Mechanical Engineers", "Other Engineers, Including Nuclear Engineers", "Petroleum, Mining And Geological Engineers, Including Mining Safety Engineers"
) ~ "Engineering & Engineering Management",
occupation %in% c(
"Electricians", "First-Line Supervisors Of Construction Trades And Extraction Workers", "First-Line Supervisors/Managers Of Construction Trades And Extraction Workers", "Other Construction And Related Workers", "Other Construction Workers, Including Solar Photovoltaic Installers", "Sheet Metal Workers", "Solar Photovoltaic Installers"
) ~ "Construction Trades & Supervisors",
occupation %in% c(
"Derrick, Rotary Drill, And Service Unit Operators, And Roustabouts, Oil And Gas", "Derrick, Rotary Drill, And Service Unit Operators, And Roustabouts, Oil, Gas, and Mining", "Earth Drillers, Except Oil and Gas", "Mining Machine Operators", "Surface Mining Machine Operators And Earth Drillers", "Underground Mining Machine Operators", "Other Extraction Workers", "Explosives Workers, Ordnance Handling Experts, And Blasters"
) ~ "Extraction, Mining & Oil/Gas Operations",
occupation %in% c(
"Chemical Processing Machine Setters, Operators, And Tenders", "Crushing, Grinding, Polishing, Mixing, And Blending Workers", "Industrial And Refractory Machinery Mechanics", "Machinists", "Miscellaneous Plant And System Operators", "Power Plant Operators, Distributors, And Dispatchers", "Pumping Station Operators", "Conveyor, Dredge, And Hoist And Winch Operators"
) ~ "Machine Operators & Technicians",
occupation %in% c(
"Environmental Scientists and Geoscientists", "Geoscientists And Hydrologists, Except Geographers", "Environmental Science And Geoscience Technicians, And Nuclear Technicians", "Geological and Petroleum Technicians, and Nuclear Technicians", "Other Life, Physical, And Social Science Technicians"
) ~ "Environmental & Physical Sciences",
occupation %in% c(
"Industrial Production Managers", "Transportation, Storage, And Distribution Managers", "Other Managers", "Sales Representatives, Wholesale And Manufacturing", "Other Installation, Maintenance, And Repair Workers"
) ~ "Management & Sales",
TRUE ~ "Uncategorized"
))
View(weighted_wage)
## by specific occupation
weighted_wage <- weighted_wage %>%
mutate(occ_group = case_when(
occupation %in% c(
"Architectural And Engineering Managers", "Civil Engineers", "Electrical And Electronics Engineers", "Engineering Managers", "Mechanical Engineers", "Other Engineers, Including Nuclear Engineers", "Petroleum, Mining And Geological Engineers, Including Mining Safety Engineers"
) ~ "Engineering",
occupation %in% c(
"Electricians", "First-Line Supervisors Of Construction Trades And Extraction Workers", "First-Line Supervisors/Managers Of Construction Trades And Extraction Workers", "Other Construction And Related Workers", "Other Construction Workers, Including Solar Photovoltaic Installers", "Sheet Metal Workers", "Solar Photovoltaic Installers"
) ~ "Construction Trades",
occupation %in% c(
"Derrick, Rotary Drill, And Service Unit Operators, And Roustabouts, Oil And Gas", "Derrick, Rotary Drill, And Service Unit Operators, And Roustabouts, Oil, Gas, and Mining", "Earth Drillers, Except Oil and Gas", "Mining Machine Operators", "Surface Mining Machine Operators And Earth Drillers", "Underground Mining Machine Operators", "Other Extraction Workers", "Explosives Workers, Ordnance Handling Experts, And Blasters"
) ~ "Extraction, Oil/Gas",
occupation %in% c(
"Chemical Processing Machine Setters, Operators, And Tenders", "Crushing, Grinding, Polishing, Mixing, And Blending Workers", "Industrial And Refractory Machinery Mechanics", "Machinists", "Miscellaneous Plant And System Operators", "Power Plant Operators, Distributors, And Dispatchers", "Pumping Station Operators", "Conveyor, Dredge, And Hoist And Winch Operators"
) ~ "Machine Operators/Technicians",
occupation %in% c(
"Environmental Scientists and Geoscientists", "Geoscientists And Hydrologists, Except Geographers", "Environmental Science And Geoscience Technicians, And Nuclear Technicians", "Geological and Petroleum Technicians, and Nuclear Technicians", "Other Life, Physical, And Social Science Technicians"
) ~ "Environmental Sciences",
occupation %in% c(
"Industrial Production Managers", "Transportation, Storage, And Distribution Managers", "Other Managers", "Sales Representatives, Wholesale And Manufacturing", "Other Installation, Maintenance, And Repair Workers"
) ~ "Management & Sales",
TRUE ~ "Uncategorized"
))
weighted_wage %>%
group_by(
occ_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average by Specific Occupation (2005-2023)", colour = "Occupation Group")
weighted_wage %>%
group_by(
occ_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", y = "Weighted Average ($)", title = "Weighted Average by Specific Occupation (2005-2023)", colour = "Occupation Group")
## highest earning occupations
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
arrange(
desc(weighted_avg)
) %>%
slice_head(
n = 5
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of 5 Highest Earning Occupations", colour = occupation)
## highest earning occupations
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
arrange(
desc(weighted_avg)
) %>%
slice_head(
n = 5
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of 5 Highest Earning Occupations", colour = occupation)
## highest earning occupations
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
arrange(
desc(weighted_avg)
) %>%
slice_head(
n = 5
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of 5 Highest Earning Occupations", colour = occupation)
## highest earning occupations
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
arrange(
desc(weighted_avg)
) %>%
slice_head(
n = 5
) %>%
View()
## highest earning occupations
weighted_wage %>%
group_by(
occupation
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
View()
## highest earning occupations
weighted_wage %>%
group_by(
occupation
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
View()
weighted_wage %>%
group_by(
occ_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Specific Occupation (2005-2023)", colour = "Occupation Group")
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of Top 5 Earning Jobs", colour = occupation)
## highest earning occupations
top_earners <- c("Architectural and Engineering Managers", "Petroleum, Mining And Geological Engineers, Including Mining Safety Engineers", "Power Plant Operators, Distributors, And Dispatchers", "Geological and Petroleum Technicians, and Nuclear Technicians", "Engineering Managers")
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of Top 5 Earning Jobs", colour = occupation)
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of Top 5 Earning Jobs", colour = occupation)
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
View()
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of Top 5 Earning Jobs", colour = occupation)
names(weighted_wage)
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
View()
weighted_wage %>%
group_by(
occupation, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
filter(
occupation %in% top_earners
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occupation
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", title = "Weighted Average Wage of Top 5 Earning Jobs", colour = "Occupation")
