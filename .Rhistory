aes(
x = Year, y = Oil, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Oil Production 2000-2011") +
ylab("Oil (barrels)")
gas_data %>%
ggplot(
aes(
x = Year, y = Gas, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Gas Production 2000-2011") +
ylab("Gas (1000 cubic ft)")
library(tidyverse)
library(readxl)
# data taken from https://www.ers.usda.gov/data-products/county-level-oil-and-gas-production-in-the-united-states
production_data <- read_xls("~/Downloads/oilgascounty.xls") %>%
filter(
County_Name %in% c("Santa Barbara County", "Ventura County", "San Luis Obispo County")
)
oil_data <- production_data %>%
select(
c(County_Name, starts_with("oil2"))
) %>%
pivot_longer(
cols = starts_with("oil2"),
names_to = "Year",
names_prefix = "oil",
values_to = "Oil"
) %>%
mutate(
Year = as.numeric(Year)
)
gas_data <- production_data %>%
select(
c(County_Name, starts_with("gas2"))
) %>%
pivot_longer(
cols = starts_with("gas"),
names_to = "Year",
names_prefix = "gas",
values_to = "Gas"
) %>%
mutate(
Year = as.numeric(Year)
)
oil_data %>%
ggplot(
aes(
x = Year, y = Oil, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Oil Production 2000-2011") +
ylab("Oil (barrels)")
gas_data %>%
ggplot(
aes(
x = Year, y = Gas, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Gas Production 2000-2011") +
ylab("Gas (1000 cubic ft)")
oil_data %>%
ggplot(
aes(
x = Year, y = Oil, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Oil Production 2000-2011") +
ylab("Oil (barrels)")
gas_data %>%
ggplot(
aes(
x = Year, y = Gas, color = County_Name
)
) +
geom_line() +
ylim(0, NA) +
theme_bw() +
ggtitle("County-Level Gas Production 2000-2011") +
ylab("Gas (1000 cubic ft)")
library(tidyverse)
library(DBI)
library(duckdb)
library(duckplyr)
con <- dbConnect(duckdb(), dbdir = ":memory:")
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
con <- dbConnect(duckdb(), dbdir = ":memory:")
df1 <- tbl(
con,
sql(
"
SELECT *
FROM read_csv_auto('~/remote_data/tls201_appln.csv')
WHERE appln_auth = 'EP'
AND appln_filing_year = 2015
"
)
)
df1 <- df1 %>%
collect() # query is executed and data enters R memory
library(DBI)
library(RMariaDB)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3306,
ssl.verify = F
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "healthinnovationlab.tmp.ucsb.edu",
port = 3307,
)
con <- dbConnect(
RMariaDB::MariaDB(),
user = "root",
password = "Th1sSh0uldB3S@f3N0w",
dbname = "sample_data",
host = "127.0.0.1",
port = 3307,
)
tables <- dbListTables(con)
str(tables)
tls201 <- dbGetQuery(
con,
"SELECT * FROM tls201_appln LIMIT 500"
)
View(tls201)
# always run when done connecting
dbDisconnect(con)
?dbConnect
?collect
library(tidyverse)
setwd("~/Desktop/PSTAT 197/Projects/capstone-project2035")
library(tidyverse)
library(scales)
microdata <- read.csv("Data/clean_microdata.csv")
microdata_counts <- microdata %>%
group_by(
county, occupation, occ_type, year, wagp, agep
) %>%
summarize(
workers = sum(pwgtp)
)
## create age group
microdata_counts <- microdata_counts %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
)
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
group_by(
county, occupation, occ_type, year, pwgtp
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
## ff vs green
weighted_wage %>%
group_by(
occ_type, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_type
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Occupation Type (2005-2023)", colour = "Occupation Type"
) +
ylim(0, 100000)
## by county
weighted_wage %>%
group_by(
county, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = county
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by County (2005-2023)", colour = "County"
) +
ylim(0, 120000)
View(microdata_counts)
View(weighted_wage)
View(microdata)
# weighted wage
weighted_wage <- microdata_counts %>%
filter(
wagp != 0
) %>%
group_by(
county, occupation, occ_type, year, pwgtp, age_group
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
# weighted wage
weighted_wage <- microdata_counts %>%
filter(
wagp != 0
) %>%
group_by(
county, occupation, occ_type, year, pwgtp
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
group_by(
county, occupation, occ_type, year, pwgtp
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
) %>%
group_by(
county, occupation, occ_type, year, pwgtp
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
) %>%
group_by(
county, occupation, occ_type, year, pwgtp, age_group
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
## ff vs green
weighted_wage %>%
group_by(
occ_type, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_type
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Occupation Type (2005-2023)", colour = "Occupation Type"
) +
ylim(0, 100000)
## by county
weighted_wage %>%
group_by(
county, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = county
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by County (2005-2023)", colour = "County"
) +
ylim(0, 120000)
## by age group
weighted_wage %>%
group_by(
age_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = age_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Age Group (2005-2023)", colour = "Age Group")
# weighted wage
weighted_wage <- microdata %>%
filter(
wagp != 0
) %>%
mutate(
age_group = ifelse(agep < 26, "16-25",
ifelse(agep < 36, "26-35",
ifelse(agep < 46, "36-45",
ifelse(agep < 56, "46-55",
ifelse(agep < 66, "56-65", "66+")))))
) %>%
group_by(
county, occupation, occ_type, year, pwgtp, age_group
) %>%
summarize(
weighted_avg = sum(wagp * pwgtp) / sum(pwgtp)
)
## ff vs green
weighted_wage %>%
group_by(
occ_type, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = occ_type
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Occupation Type (2005-2023)", colour = "Occupation Type"
) +
ylim(0, 100000)
## by county
weighted_wage %>%
group_by(
county, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = county
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by County (2005-2023)", colour = "County"
) +
ylim(0, 120000)
## by county
weighted_wage %>%
group_by(
county, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = county
)
) +
geom_line() +
theme_bw() +
labs(
x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by County (2005-2023)", colour = "County"
) +
ylim(0, 120000)
## by age group
weighted_wage %>%
group_by(
age_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = age_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Age Group (2005-2023)", colour = "Age Group")
## by age group
weighted_wage %>%
group_by(
age_group, year
) %>%
summarize(
weighted_avg = mean(weighted_avg)
) %>%
ggplot(
aes(
x = year, y = weighted_avg, colour = age_group
)
) +
geom_line() +
theme_bw() +
labs(x = "Year", y = "Weighted Average ($)", title = "Weighted Average Wage by Age Group (2005-2023)", colour = "Age Group") +
ylim(0, 120000)
